{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/aws-certified-solutions-architect-associate","result":{"data":{"post":{"__typename":"MdxPost","slug":"/aws-certified-solutions-architect-associate","title":"AWS Certified Solutions Architect Associate","date":"12.03.2021","tags":[{"name":"Tutorial","slug":"tutorial"},{"name":"AWS","slug":"aws"}],"description":"Summary notes for my AWS SAA-C002 exam","canonicalUrl":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"AWS Certified Solutions Architect Associate\",\n  \"date\": \"2021-03-12T00:00:00.000Z\",\n  \"description\": \"Summary notes for my AWS SAA-C002 exam\",\n  \"tags\": [\"Tutorial\", \"AWS\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"These are my notes for my exam prep and may not contain all the important aspects.\"), mdx(\"p\", null, \"I am keeping notes for the areas that I find important and worthwile remembering so, this is by no means complete recap of the lessons \"), mdx(\"p\", null, \"Source: Stephane Maarek, Udemy\"), mdx(\"h1\", null, \"3. Fundamentals IAM & EC2\"), mdx(\"h2\", null, \"AWS Regions\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Regions \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Regions > Availabilty Zones \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"North America > US East 1 for example \"))), mdx(\"h2\", null, \"IAM Introduction\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Users \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Groups \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Roles \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Root has all the power \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Users: physical user : you, me \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Group: Users grouped together, admin, devops, finance, engineer, design etc \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Role: Internal usage within AWS resources, those are for machines \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Policies: JSON docs that define what those things can/cannot do \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"IAM is global, not region specific \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Can support Multi Factor Auth \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"You can use pre-defined policies \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Least priviliged! all the time!\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"IAM Federation\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"IAM Dump \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"1 Person = 1 IAM User, not shared \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"1 App = 1 Role, not shared  (this EC2 belongs to BackEnd Java Spring Server, Prod)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Never write IAM Credentials in Code, duh\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Never use ROOT anymore, just create User and let user deal with it \"))), mdx(\"h2\", null, \"EC2\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Rent virtual machines (ec2)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Store data on Virtual Drive (EBS)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Distribute the load across machines Elastic Load Balancer (ELB)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Scale services using auto scaling group: ASG\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"These are my notes for my exam prep and may not contain all the important aspects. I am keeping notes for the areas that I find importantâ€¦","timeToRead":1,"banner":null}},"pageContext":{"slug":"/aws-certified-solutions-architect-associate","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}